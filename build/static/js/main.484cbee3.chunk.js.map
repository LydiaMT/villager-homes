{"version":3,"sources":["Card.jsx","Dropdown.jsx","App.jsx","index.jsx"],"names":["Card","villager","className","alt","Villager","src","Personality","Animal","Dropdown","title","options","onChange","useState","open","setOpen","selections","setSelections","dropdownRef","useRef","useEffect","handleDocumentClick","event","current","contains","target","document","addEventListener","removeEventListener","showCheckboxes","isSelected","selection","includes","handleChange","option","_event","selectedItem","prev","filter","role","tabIndex","key","ref","onClick","onKeyDown","map","htmlFor","type","id","value","checked","houseTypes","Set","houseColor","trimColor","roofMaterial","roofColor","doorType","doorColor","houseData","forEach","add","App","filters","setFilters","setFilter","selected","filteredData","data","length","filterData","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.484cbee3.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Card({ villager }) {\n  return (\n    <div className=\"Card card\">\n      <div className=\"container-left\">\n        <img className=\"house-img\" alt={`${villager.Villager}'s house`} src={`img/homes/${villager.Villager} - ${villager.Personality}.png`} />\n      </div>\n      <div className=\"container-right\">\n        <h1>{villager.Villager}</h1>\n        <h2>{villager.Animal}</h2>\n        <h2>{villager.Personality}</h2>\n        <img className=\"villager-img\" alt={`${villager.Villager}'s icon`} src={`img/villagers/${villager.Villager}_NH_Villager_Icon.png`} />\n      </div>\n    </div>\n  );\n}\n","import React, { useRef, useState, useEffect } from 'react';\n// , { useState , useEffect, useRef }\n\nexport default function Dropdown({\n  title = '',\n  options = [],\n  onChange = () => {},\n}) {\n  const [open, setOpen] = useState(false);\n  const [selections, setSelections] = useState([]);\n\n  const dropdownRef = useRef(null);\n  useEffect(() => {\n    const handleDocumentClick = (event) => {\n      if (dropdownRef && dropdownRef.current && !dropdownRef.current.contains(event.target) && open) {\n        setOpen(false);\n      }\n    };\n    document.addEventListener('click', handleDocumentClick, false);\n    return function cleanup() {\n      document.removeEventListener('click', handleDocumentClick, false);\n    };\n  });\n\n  const showCheckboxes = () => {\n    setOpen(true);\n  };\n\n  const addSelections = (selection) => {\n    setSelections((prev) => [selection, ...prev]);\n  };\n\n  const removeSelections = (selectedItem) => {\n    setSelections((prev) => prev.filter((selection) => selection !== selectedItem));\n  };\n\n  const isSelected = (selection) => selections.includes(selection);\n\n  const handleChange = (option) => (_event) => {\n    if (isSelected(option)) {\n      removeSelections(option);\n    } else {\n      addSelections(option);\n    }\n  };\n\n  useEffect(() => {\n    onChange(selections);\n  }, [selections]);\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex=\"-1\"\n      key={title}\n      ref={dropdownRef}\n      onClick={showCheckboxes}\n      onKeyDown={showCheckboxes}\n    >\n      <h3>Click to select options...</h3>\n      {\n        open === true && (\n        <div>\n          {options.map((option) => (\n            <label htmlFor={option} key={option}>\n              <input onChange={handleChange(option)} type=\"checkbox\" id={option} value={option} checked={isSelected(option)} />\n              {option}\n            </label>\n          ))}\n        </div>\n        )\n        }\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport houseData from './data/houses.json';\nimport Card from './Card.jsx';\nimport Dropdown from './Dropdown.jsx';\n\nconst houseTypes = new Set();\nconst houseColor = new Set();\nconst trimColor = new Set();\nconst roofMaterial = new Set();\nconst roofColor = new Set();\nconst doorType = new Set();\nconst doorColor = new Set();\n\nhouseData.forEach((villager) => {\n  houseTypes.add(villager['House Type']);\n  houseColor.add(villager['House Color']);\n  trimColor.add(villager['Trim Color']);\n  roofMaterial.add(villager['Roof Material']);\n  roofColor.add(villager['Roof Color']);\n  doorType.add(villager['Door Style']);\n  doorColor.add(villager['Door Color']);\n});\n\nconst filterData = (data, filters) => data.filter((villager) => {\n  if (filters.houseTypes.length > 0 && !filters.houseTypes.includes(villager['House Type'])) {\n    return false;\n  }\n  if (filters.houseColor.length > 0 && !filters.houseColor.includes(villager['House Color'])) {\n    return false;\n  }\n  if (filters.trimColor.length > 0 && !filters.trimColor.includes(villager['Trim Color'])) {\n    return false;\n  }\n  if (filters.roofMaterial.length > 0 && !filters.roofMaterial.includes(villager['Roof Material'])) {\n    return false;\n  }\n  if (filters.roofColor.length > 0 && !filters.roofColor.includes(villager['Roof Color'])) {\n    return false;\n  }\n  if (filters.doorType.length > 0 && !filters.doorType.includes(villager['Door Style'])) {\n    return false;\n  }\n  if (filters.doorColor.length > 0 && !filters.doorColor.includes(villager['Door Color'])) {\n    return false;\n  }\n  return true;\n});\n\nconst App = () => {\n  const [filters, setFilters] = useState({\n    houseTypes: [],\n    houseColor: [],\n    trimColor: [],\n    roofMaterial: [],\n    roofColor: [],\n    doorType: [],\n    doorColor: [],\n  });\n\n  const setFilter = (filter = '') => (selected = []) => {\n    setFilters((prev) => ({\n      ...prev,\n      [filter]: selected,\n    }));\n  };\n\n  const filteredData = filterData(houseData, filters);\n\n  return (\n    <span className=\"App wrapper\">\n      <section className=\"dropdown-container\">\n        <div className=\"dropdown-wrapper\">\n          <h1>House</h1>\n          <h2>House Type</h2>\n          <Dropdown\n            title=\"House Types\"\n            options={[...houseTypes]}\n            onChange={setFilter('houseTypes')}\n          />\n          <h2>House Color</h2>\n          <Dropdown\n            title=\"House Color\"\n            options={[...houseColor]}\n            onChange={setFilter('houseColor')}\n          />\n          <h2>Trim Color</h2>\n          <Dropdown\n            title=\"Trim Color\"\n            options={[...trimColor]}\n            onChange={setFilter('trimColor')}\n          />\n        </div>\n        <div className=\"dropdown-wrapper\">\n          <h1>Roof</h1>\n          <h2>Roof Material</h2>\n          <Dropdown\n            title=\"Roof Material\"\n            options={[...roofMaterial]}\n            onChange={setFilter('roofMaterial')}\n          />\n          <h2>Roof Color</h2>\n          <Dropdown\n            title=\"Roof Color\"\n            options={[...roofColor]}\n            onChange={setFilter('roofColor')}\n          />\n        </div>\n        <div className=\"dropdown-wrapper\">\n          <h1>Door</h1>\n          <h2>Door Type</h2>\n          <Dropdown\n            title=\"Door Type\"\n            options={[...doorType]}\n            onChange={setFilter('doorType')}\n          />\n          <h2>Door Color</h2>\n          <Dropdown\n            title=\"Door Color\"\n            options={[...doorColor]}\n            onChange={setFilter('doorColor')}\n          />\n        </div>\n      </section>\n      <section className=\"card-wrapper\">\n        {filteredData.map((villager) => (\n          <Card\n            key={villager.Villager}\n            villager={villager}\n          />\n        ))}\n      </section>\n    </span>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}